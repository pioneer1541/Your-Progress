{"version":3,"sources":["components/UI/Button.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/UI/Button.module.css","components/Progress/ProgressItem.module.css","components/UI/TaskCard.module.css","components/Progress/ProgressItemOperation.module.css","components/UI/MessageModal.module.css","components/UI/ConfirmationModal.module.css","components/Progress/ProgressList.module.css","components/Layout/Layout.module.css","components/Progress/ProgressAdd.module.css","components/UI/TaskCard.js","components/UI/MessageModal.js","components/UI/ConfirmationModal.js","components/Progress/ProgressItemOperation.js","components/Progress/ProgressItem.js","components/Progress/ProgressList.js","components/Progress/ProgressAdd.js","components/Layout/Nav.js","components/Layout/Layout.js"],"names":["Button","props","buttonName","name","buttonType","type","buttonEvent","event","className","styles","main","onClick","emo","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","from","test","TypeError","module","exports","TaskCard","id","title","startDate","endDate","useState","warning","setWarning","warningMessage","setWarningMessage","task","newTask","getInput","target","inputIsValid","Date","now","closeButtonHandler","changeModalHandler","prevState","confirmButtonHandle","console","log","confirmHandle","Modal","card","backdrop","modal","header","action","content","form","defaultValue","onChange","actions","ReactDOM","createPortal","document","getElementById","MessageModal","closeHandler","message","require","ConfirmationModal","yesButtonHandler","yesHandler","ProgressItemOperation","updateShow","setUpdateShow","setMessage","deleteShow","setDeleteShow","messageData","setMessageData","getDMY","dateValue","day","getDate","month","getMonth","year","getFullYear","dateToString","token","localStorage","getItem","dispatch","useDispatch","operation","fetch","process","method","mode","headers","auth","Accept","body","JSON","stringify","_id","then","res","json","result","state","taskNewData","ProgressItem","today","dateDescription","differenceDaysFromBegin","Math","ceil","getTime","differenceDaysFromNow","progress","max","min","toFixed","style","height","width","ProgressList","data","taskList","map","cardUl","ProgressAdd","showNewTaskModal","setShowNewTaskModal","Nav","username","useSelector","href","class","newTaskAdd","data-toggle","removeItem","Layout","useEffect","title_main"],"mappings":"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","file":"static/js/3.4a494efb.chunk.js","sourcesContent":["import styles from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  const buttonName = props.name;\r\n  const buttonType = props.type;\r\n  const buttonEvent = props.event;\r\n  return (\r\n    <div className={styles.main}>\r\n      <button\r\n        className={\"btn btn-outline-primary\"}\r\n        type={buttonType}\r\n        onClick={buttonEvent}\r\n      >\r\n        <i className={props.emo}></i>\r\n        {buttonName}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Button_main__2cf7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressItem_main__l-R0Z\",\"card\":\"ProgressItem_card__1Ft8t\",\"item\":\"ProgressItem_item__VqBWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"TaskCard_card__2LJdf\",\"backdrop\":\"TaskCard_backdrop__3HH6J\",\"modal\":\"TaskCard_modal__3pNUp\",\"header\":\"TaskCard_header__2uKGK\",\"content\":\"TaskCard_content__1PUNK\",\"form\":\"TaskCard_form__1yYxV\",\"actions\":\"TaskCard_actions__3WQJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressItemOperation_main__Y-dXi\",\"operation\":\"ProgressItemOperation_operation__q2j8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MessageModal_card__1M8mm\",\"backdrop\":\"MessageModal_backdrop__2W31N\",\"modal\":\"MessageModal_modal__2g7Ht\",\"header\":\"MessageModal_header__4310p\",\"content\":\"MessageModal_content__aSzfh\",\"message\":\"MessageModal_message__3oMEp\",\"form\":\"MessageModal_form__2Opu2\",\"actions\":\"MessageModal_actions__DV91P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ConfirmationModal_card__K5BPK\",\"backdrop\":\"ConfirmationModal_backdrop__YAHJt\",\"modal\":\"ConfirmationModal_modal__1lfTy\",\"header\":\"ConfirmationModal_header__10Fj5\",\"content\":\"ConfirmationModal_content__26xhu\",\"form\":\"ConfirmationModal_form__PxP9t\",\"message\":\"ConfirmationModal_message__3SH7m\",\"actions\":\"ConfirmationModal_actions__QXYl7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressList_main__fDZim\",\"cardUl\":\"ProgressList_cardUl__2kJ6b\",\"list\":\"ProgressList_list__281CX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_main\":\"Layout_title_main__29B9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressAdd_main__1VIXr\",\"button\":\"ProgressAdd_button__1l09r\",\"actions\":\"ProgressAdd_actions__kJ_ni\"};","import Button from \"./Button\";\r\nimport styles from \"./TaskCard.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Fragment, useState } from \"react\";\r\n\r\nconst TaskCard = (\r\n  props = {\r\n    id: \"\",\r\n    title: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  }\r\n) => {\r\n  const [warning, setWarning] = useState(false);\r\n  const [warningMessage, setWarningMessage] = useState(\"\");\r\n  let task = props;\r\n  let newTask = {\r\n    id: props.id,\r\n    title: props.title,\r\n    startDate: props.startDate,\r\n    endDate: props.endDate,\r\n  };\r\n  const getInput = (event) => {\r\n    switch (event.target.name) {\r\n      case \"title\":\r\n        newTask.title = event.target.value;\r\n        break;\r\n      case \"startDate\":\r\n        newTask.startDate = event.target.value;\r\n        break;\r\n      case \"endDate\":\r\n        newTask.endDate = event.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputIsValid = () => {\r\n    if (newTask.title.length < 1) {\r\n      setWarningMessage(\"The title can not be empty!\");\r\n      setWarning(true);\r\n      return false;\r\n    }\r\n    if (newTask.startDate > newTask.endDate) {\r\n      setWarningMessage(\"The Start Date must be early than End Dte!\");\r\n      setWarning(true);\r\n      return false;\r\n    }\r\n    if (new Date(newTask.endDate) < Date.now()) {\r\n      setWarningMessage(\"The End Date must be later than today!\");\r\n      setWarning(true);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const closeButtonHandler = () => {\r\n    props.changeModalHandler((prevState) => !prevState);\r\n  };\r\n  const confirmButtonHandle = () => {\r\n    if (inputIsValid()) {\r\n      console.log(12321)\r\n      props.confirmHandle(newTask);\r\n    }\r\n  };\r\n  const Modal = (props) => {\r\n    return (\r\n      <div className={styles.card}>\r\n        <div className={styles.backdrop}></div>\r\n        <div className={styles.modal} id=\"modal\">\r\n          <div className={styles.header}>\r\n            <h2>{props.action} Task</h2>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <form className={styles.form}>\r\n              <label className=\"my-2\">Title: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                defaultValue={props.task.title}\r\n                onChange={getInput}\r\n              ></input>\r\n              <label className=\"my-2\">Start Date: </label>\r\n              <input\r\n                defaultValue={props.task.startDate}\r\n                name=\"startDate\"\r\n                type=\"date\"\r\n                onChange={getInput}\r\n              ></input>\r\n              <label className=\"my-2\">End Date: </label>\r\n              <input\r\n                defaultValue={props.task.endDate}\r\n                name=\"endDate\"\r\n                type=\"date\"\r\n                onChange={getInput}\r\n              ></input>\r\n            </form>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <Button name=\"Close\" event={closeButtonHandler}></Button>\r\n            <Button name={props.action} event={confirmButtonHandle}></Button>\r\n          </div>\r\n          {warning && (\r\n            <div className=\"alert alert-danger\">\r\n              <strong>Failed!</strong> {warningMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Modal task={task} action={props.action} />,\r\n        document.getElementById(\"modal\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n","import Button from \"./Button\";\r\nimport styles from \"./MessageModal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst MessageModal = (props) => {\r\n  const closeButtonHandler = () => {\r\n    props.closeHandler(false)\r\n  };\r\n\r\n  const Modal = (props) => {\r\n    return (\r\n      <div>\r\n        <div className={styles.backdrop}></div>\r\n        <div className={styles.modal}>\r\n          <div className={styles.header}>\r\n            <h2>{props.title}</h2>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <h4 className={styles.message}>{props.content}</h4>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <Button name=\"OK\" event={closeButtonHandler}></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Modal title={props.title} content={props.content} />,\r\n        document.getElementById(\"message\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MessageModal;\r\n","import Button from \"./Button\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst styles = require(\"./ConfirmationModal.module.css\");\r\n\r\nconst ConfirmationModal = (props) => {\r\n  const closeButtonHandler = () => {\r\n    props.closeHandler(false);\r\n  };\r\n\r\n  const yesButtonHandler = () => {\r\n    props.yesHandler();\r\n    props.closeHandler(false);\r\n  };\r\n  const Modal = (props) => {\r\n    return (\r\n      <div>\r\n        <div className={styles.backdrop}></div>\r\n        <div className={styles.modal}>\r\n          <div className={styles.header}>\r\n            <h2>{props.title}</h2>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <p className={styles.message}>{props.content}</p>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <Button name=\"No\" event={closeButtonHandler}></Button>\r\n            <Button name=\"Yes\" event={yesButtonHandler}></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Modal title={props.title} content={props.content} />,\r\n        document.getElementById(\"message\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport TaskCard from \"../UI/TaskCard\";\r\nimport styles from \"./ProgressItemOperation.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MessageModal from \"../UI/MessageModal\";\r\nimport ConfirmationModal from \"../UI/ConfirmationModal\";\r\n\r\nconst ProgressItemOperation = (props) => {\r\n  const [updateShow, setUpdateShow] = useState(false);\r\n  const [message, setMessage] = useState(false);\r\n  const [deleteShow, setDeleteShow] = useState(false);\r\n  const [messageData, setMessageData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const getDMY = (dateValue) => {\r\n    dateValue = new Date(dateValue);\r\n    return {\r\n      day:\r\n        dateValue.getDate() < 10\r\n          ? \"0\" + dateValue.getDate()\r\n          : dateValue.getDate(),\r\n      month:\r\n        dateValue.getMonth() + 1 < 10\r\n          ? \"0\" + (dateValue.getMonth() + 1)\r\n          : dateValue.getMonth() + 1,\r\n      year: dateValue.getFullYear(),\r\n    };\r\n  };\r\n  const dateToString = (dateValue) => {\r\n    return dateValue.year + \"-\" + dateValue.month + \"-\" + dateValue.day;\r\n  };\r\n  let startDate = getDMY(props.startDate);\r\n  let endDate = getDMY(props.endDate);\r\n\r\n  startDate = dateToString(startDate);\r\n  endDate = dateToString(endDate);\r\n  const updateEventHandler = () => {\r\n    setUpdateShow(true);\r\n  };\r\n\r\n  const deleteEventHandler = () => {\r\n    setMessageData({\r\n      title: \"Delete!\",\r\n      content:\r\n        \"Would you really like to delete the task: [ \" + props.title + \" ]?\",\r\n    });\r\n    setDeleteShow(true);\r\n  };\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchUpdatedTask = (task) => {\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/update-task\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        if (result.state) {\r\n          setMessageData({\r\n            title: \"Success!\",\r\n            content: \"You have updated the task: [ \" + props.title + \" ]\",\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n          dispatch({\r\n            type: \"taskUpdateOne\",\r\n            task: props.id,\r\n            taskNewData: result[0],\r\n          });\r\n        } else {\r\n          setMessageData({\r\n            title: \"Failed!\",\r\n            content: result.message,\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteTask = () => {\r\n    console.log(\"aaa \" + props.id);\r\n\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/delete-task\", {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ _id: props.id }),\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        if (result.state) {\r\n          setMessageData({\r\n            title: \"Success!\",\r\n            content: \"You have delete the task: [ \" + props.title + \" ]\",\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n          dispatch({\r\n            type: \"taskDeleteOne\",\r\n            task: props.id,\r\n          });\r\n        } else {\r\n          setMessageData({\r\n            title: \"Failed!\",\r\n            content: result.message,\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.operation}>\r\n        {deleteShow && (\r\n          <ConfirmationModal\r\n            closeHandler={setDeleteShow}\r\n            yesHandler={fetchDeleteTask}\r\n            title={messageData.title}\r\n            content={messageData.content}\r\n          ></ConfirmationModal>\r\n        )}\r\n        {message && (\r\n          <MessageModal\r\n            closeHandler={setMessage}\r\n            title={messageData.title}\r\n            content={messageData.content}\r\n          ></MessageModal>\r\n        )}\r\n        {updateShow && (\r\n          <TaskCard\r\n            id={props.id}\r\n            title={props.title}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            confirmHandle={fetchUpdatedTask}\r\n            changeModalHandler={setUpdateShow}\r\n            action=\"Update\"\r\n          ></TaskCard>\r\n        )}\r\n        <Button\r\n          name=\" Edit\"\r\n          event={updateEventHandler}\r\n          emo=\"fas fa-edit\"\r\n        ></Button>\r\n        <Button\r\n          name=\" Delete\"\r\n          event={deleteEventHandler}\r\n          emo=\"fas fa-trash-alt\"\r\n        ></Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressItemOperation;\r\n","import styles from \"./ProgressItem.module.css\";\r\nimport ProgressItemOperation from \"./ProgressItemOperation\";\r\n\r\nconst ProgressItem = (props) => {\r\n  const startDate = new Date(props.startDate);\r\n  const endDate = new Date(props.endDate);\r\n  const today = new Date(Date.now());\r\n\r\n  const dateDescription =\r\n    props.startDate.toString().slice(0, 10) +\r\n    \" To \" +\r\n    props.endDate.toString().slice(0, 10);\r\n\r\n  const differenceDaysFromBegin = Math.ceil(\r\n    (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24)\r\n  );\r\n\r\n  const differenceDaysFromNow = Math.ceil(\r\n    (endDate.getTime() - today.getTime()) / (1000 * 3600 * 24)\r\n  );\r\n  const progress =\r\n    Math.max(\r\n      0,\r\n      Math.min(\r\n        100,\r\n        ((differenceDaysFromBegin - differenceDaysFromNow +1) /\r\n          differenceDaysFromBegin) *\r\n          100\r\n      )\r\n    )\r\n      .toFixed(2)\r\n      .toString() + \"%\";\r\n\r\n  return (\r\n    <li className=\"container p-3 my-3\" id={props.id}>\r\n      <div className={\"card \" + styles.card}>\r\n        <div className=\"card-body bg-light\">\r\n          <div>\r\n            <h4 className=\"card-title my-3\">{props.title}</h4>\r\n          </div>\r\n          <div>\r\n            <p className=\"card-text my-3\">\r\n              <strong>{differenceDaysFromNow}</strong> days far from{\" \"}\r\n              {props.title}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <div className={\"progress  my-3\"} style={{ height: \"30px\" }}>\r\n              <div\r\n                className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                style={{ width: progress, height: \"30px\" }}\r\n              >\r\n                {progress}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-left\">\r\n            <p className=\"card-text\">{dateDescription}</p>\r\n          </div>\r\n          <div>\r\n            <ProgressItemOperation\r\n              id={props.id}\r\n              title={props.title}\r\n              startDate={props.startDate}\r\n              endDate={props.endDate}\r\n            ></ProgressItemOperation>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProgressItem;\r\n","import ProgressItem from \"./ProgressItem\";\r\nimport styles from \"./ProgressList.module.css\";\r\n\r\nconst ProgressList = (props) => {\r\n  let userProgress = props.taskList;\r\n  const data = userProgress.map((progress) => {\r\n    return (\r\n      <ProgressItem\r\n        key={progress._id}\r\n        id={progress._id}\r\n        title={progress.title}\r\n        startDate={progress.startDate}\r\n        endDate={progress.endDate}\r\n      ></ProgressItem>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.main}>\r\n      <div></div>\r\n      <ul className={\"card-deck \" + styles.cardUl}>{data}</ul>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressList;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MessageModal from \"../UI/MessageModal\";\r\nimport TaskCard from \"../UI/TaskCard\";\r\nimport styles from \"./ProgressAdd.module.css\";\r\n\r\nconst ProgressAdd = (props) => {\r\n  const [showNewTaskModal, setShowNewTaskModal] = useState(false);\r\n  const [message, setMessage] = useState(false);\r\n  const newProgressHandler = () => {\r\n    setShowNewTaskModal(true);\r\n  };\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n  const [messageData, setMessageData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const fetchNewTask = (task) => {\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/new-task\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        if (result.state) {\r\n          dispatch({\r\n            type: \"taskAddOne\",\r\n            task: result,\r\n          });\r\n          setMessageData({\r\n            title: \"Success!\",\r\n            content: \"You have created a new Task: [ \" + result.title + \" ]\",\r\n          });\r\n          setMessage(true);\r\n          setShowNewTaskModal(false);\r\n        } else {\r\n          setMessageData({\r\n            title: \"Failed!\",\r\n            content: result.message,\r\n          });\r\n          setMessage(true);\r\n          setShowNewTaskModal(false);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className={\"nav-item mx-auto\"}>\r\n      <div className={styles.actions}>\r\n        {message && (\r\n          <MessageModal\r\n            closeHandler={setMessage}\r\n            title={messageData.title}\r\n            content={messageData.content}\r\n          ></MessageModal>\r\n        )}\r\n        {showNewTaskModal && (\r\n          <TaskCard\r\n            action=\"Create\"\r\n            confirmHandle={fetchNewTask}\r\n            changeModalHandler={setShowNewTaskModal}\r\n          ></TaskCard>\r\n        )}\r\n        <a\r\n          className=\"text-white btn-lg btn btn-dark\"\r\n          onClick={newProgressHandler}\r\n        >\r\n          <i className=\"fas fa-plus-circle\"></i> New Task\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressAdd;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport ProgressAdd from \"../Progress/ProgressAdd\";\r\n\r\n\r\nconst Nav = (props) => {\r\n    const username = useSelector(state=>state.username)\r\n    const token = localStorage.getItem(\"token\");\r\n    const dispatch = useDispatch();\r\n    const logoutEventHandler =() =>{\r\n      localStorage.removeItem('token');\r\n      dispatch({\r\n        type: \"logout\",\r\n      })\r\n    }\r\n\r\n    const newTaskAdd = (task) => {\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/task/new-task\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          auth: token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: task.username,\r\n          title: task.title,\r\n          startDate: task.startDate,\r\n          endDate: task.endDate,\r\n        }),\r\n      })\r\n        .then((res) => (res = res.json()))\r\n        .then((result) => {\r\n          dispatch({\r\n            type: \"taskAddOne\",\r\n            task: result,\r\n          });\r\n        });\r\n    };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n      <a className=\"navbar-brand mr-auto\" href=\"/\"><i class=\"fas fa-home\"></i></a>\r\n      <ProgressAdd newTaskAdd={newTaskAdd}></ProgressAdd>\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item dropdown\">\r\n          <a\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbardrop\"\r\n            data-toggle=\"dropdown\"\r\n          >\r\n            {username}\r\n          </a>\r\n          <div className=\"dropdown-menu \">\r\n            <a className=\"dropdown-item\" onClick={logoutEventHandler} href=\"#\">\r\n              Sign out\r\n            </a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import ProgressList from \"../Progress/ProgressList\";\r\nimport styles from \"./Layout.module.css\";\r\nimport Nav from \"./Nav\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Layout = (props) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const taskList = useSelector((state) => state.taskList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/get-tasks\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        dispatch({\r\n          type: \"taskUpdateAll\",\r\n          taskList: result,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <Nav></Nav>\r\n      {taskList.length > 0 ? (\r\n        <ProgressList taskList={taskList}></ProgressList>\r\n      ) : (\r\n        <div className={styles.title_main}>\r\n          <p className=\"bg-secondary\">Sorry,you do not have any task!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}