{"version":3,"sources":["components/Register/Register.module.css","components/Login/Login.module.css","components/UI/TaskCard.module.css","components/UI/MessageModal.module.css","components/Progress/ProgressItemOperation.module.css","components/Progress/ProgressList.module.css","components/Layout/Layout.module.css","components/Progress/ProgressItem.module.css","components/UI/Button.module.css","components/Progress/ProgressAdd.module.css","components/UI/ConfirmationModal.module.css","components/UI/Button.js","components/UI/TaskCard.js","components/UI/MessageModal.js","components/UI/ConfirmationModal.js","components/Progress/ProgressItemOperation.js","components/Progress/ProgressItem.js","components/Progress/ProgressList.js","components/Progress/ProgressAdd.js","components/Layout/Nav.js","components/Layout/Layout.js","components/Login/Login.js","components/Register/Register.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["module","exports","Button","props","buttonName","name","buttonType","type","buttonEvent","event","className","styles","main","onClick","emo","TaskCard","id","title","startDate","endDate","useState","warning","setWarning","warningMessage","setWarningMessage","task","newTask","getInput","target","value","inputIsValid","length","Date","now","closeButtonHandler","changeModalHandler","prevState","confirmButtonHandle","console","log","confirmHandle","Modal","card","backdrop","modal","header","action","content","form","defaultValue","onChange","actions","ReactDOM","createPortal","document","getElementById","MessageModal","closeHandler","message","require","ConfirmationModal","yesButtonHandler","yesHandler","ProgressItemOperation","updateShow","setUpdateShow","setMessage","deleteShow","setDeleteShow","messageData","setMessageData","getDMY","dateValue","day","getDate","month","getMonth","year","getFullYear","dateToString","token","localStorage","getItem","dispatch","useDispatch","operation","fetch","process","method","mode","headers","auth","Accept","body","JSON","stringify","_id","then","res","json","result","state","taskNewData","ProgressItem","today","dateDescription","toString","slice","differenceDaysFromBegin","Math","ceil","getTime","differenceDaysFromNow","progress","max","min","toFixed","style","height","width","ProgressList","data","taskList","map","cardUl","ProgressAdd","showNewTaskModal","setShowNewTaskModal","Nav","username","useSelector","href","class","newTaskAdd","data-toggle","removeItem","Layout","useEffect","title_main","Login","setUsername","password","setPassword","loginError","setLoginError","errorMessage","setErrorMessage","user","setUser","setItem","userIsAuth","border","onSubmit","preventDefault","ok","Error","catch","err","control","passwd","register","Register","history","useHistory","usernameIsChanged","setUsernameIsChanged","usernameError","setUsernameError","setPasswd","passwdIsChanged","setPasswdIsChanged","passwdError","setPasswdError","confirm_passwd","setConfirm_passwd","confirm_passwdIsChanged","setConfirm_passwdIsChanged","confirm_passwdError","setConfirm_passwdError","registerError","setRegisterError","test","text","onBlur","required","error","push","App","isAuth","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","store","createStore","newTaskListAfterUpdate","newTaskListAfterDelete","filter","render"],"mappings":"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","file":"static/js/main.b8741b38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__3xl0F\",\"border\":\"Register_border__3K7TJ\",\"title\":\"Register_title__22Lso\",\"control\":\"Register_control__cs3SC\",\"button\":\"Register_button__1AWx-\",\"form\":\"Register_form__2BrTC\",\"error\":\"Register_error__1QSWg\",\"message\":\"Register_message__yeYvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2FpVe\",\"border\":\"Login_border__2D7YE\",\"title\":\"Login_title__1VWY9\",\"control\":\"Login_control__6BE2H\",\"form\":\"Login_form__8b7nq\",\"actions\":\"Login_actions__3l1_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"TaskCard_card__2LJdf\",\"backdrop\":\"TaskCard_backdrop__3HH6J\",\"modal\":\"TaskCard_modal__3pNUp\",\"header\":\"TaskCard_header__2uKGK\",\"content\":\"TaskCard_content__1PUNK\",\"form\":\"TaskCard_form__1yYxV\",\"actions\":\"TaskCard_actions__3WQJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MessageModal_card__1M8mm\",\"backdrop\":\"MessageModal_backdrop__2W31N\",\"modal\":\"MessageModal_modal__2g7Ht\",\"header\":\"MessageModal_header__4310p\",\"content\":\"MessageModal_content__aSzfh\",\"message\":\"MessageModal_message__3oMEp\",\"form\":\"MessageModal_form__2Opu2\",\"actions\":\"MessageModal_actions__DV91P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressItemOperation_main__Y-dXi\",\"operation\":\"ProgressItemOperation_operation__q2j8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressList_main__fDZim\",\"cardUl\":\"ProgressList_cardUl__2kJ6b\",\"list\":\"ProgressList_list__281CX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_main\":\"Layout_title_main__29B9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressItem_main__l-R0Z\",\"card\":\"ProgressItem_card__1Ft8t\",\"item\":\"ProgressItem_item__VqBWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Button_main__2cf7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProgressAdd_main__1VIXr\",\"button\":\"ProgressAdd_button__1l09r\",\"actions\":\"ProgressAdd_actions__kJ_ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ConfirmationModal_card__K5BPK\",\"backdrop\":\"ConfirmationModal_backdrop__YAHJt\",\"modal\":\"ConfirmationModal_modal__1lfTy\",\"header\":\"ConfirmationModal_header__10Fj5\",\"content\":\"ConfirmationModal_content__26xhu\",\"form\":\"ConfirmationModal_form__PxP9t\",\"message\":\"ConfirmationModal_message__3SH7m\",\"actions\":\"ConfirmationModal_actions__QXYl7\"};","import styles from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  const buttonName = props.name;\r\n  const buttonType = props.type;\r\n  const buttonEvent = props.event;\r\n  return (\r\n    <div className={styles.main}>\r\n      <button\r\n        className={\"btn btn-outline-primary btn-block\"}\r\n        type={buttonType}\r\n        onClick={buttonEvent}\r\n      >\r\n        <i className={props.emo}></i>\r\n        {buttonName}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\nimport styles from \"./TaskCard.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Fragment, useState } from \"react\";\r\n\r\nconst TaskCard = (\r\n  props = {\r\n    id: \"\",\r\n    title: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  }\r\n) => {\r\n  const [warning, setWarning] = useState(false);\r\n  const [warningMessage, setWarningMessage] = useState(\"\");\r\n  let task = props;\r\n  let newTask = {\r\n    id: props.id,\r\n    title: props.title,\r\n    startDate: props.startDate,\r\n    endDate: props.endDate,\r\n  };\r\n  const getInput = (event) => {\r\n    switch (event.target.name) {\r\n      case \"title\":\r\n        newTask.title = event.target.value;\r\n        break;\r\n      case \"startDate\":\r\n        newTask.startDate = event.target.value;\r\n        break;\r\n      case \"endDate\":\r\n        newTask.endDate = event.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const inputIsValid = () => {\r\n    if (newTask.title.length < 1) {\r\n      setWarningMessage(\"The title can not be empty!\");\r\n      setWarning(true);\r\n      return false;\r\n    }\r\n    if (newTask.startDate > newTask.endDate) {\r\n      setWarningMessage(\"The Start Date must be early than End Dte!\");\r\n      setWarning(true);\r\n      return false;\r\n    }\r\n    if (new Date(newTask.endDate) < Date.now()) {\r\n      setWarningMessage(\"The End Date must be later than today!\");\r\n      setWarning(true);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const closeButtonHandler = () => {\r\n    props.changeModalHandler((prevState) => !prevState);\r\n  };\r\n  const confirmButtonHandle = () => {\r\n    if (inputIsValid()) {\r\n      console.log(12321)\r\n      props.confirmHandle(newTask);\r\n    }\r\n  };\r\n  const Modal = (props) => {\r\n    return (\r\n      <div className={styles.card}>\r\n        <div className={styles.backdrop}></div>\r\n        <div className={styles.modal} id=\"modal\">\r\n          <div className={styles.header}>\r\n            <h2>{props.action} Task</h2>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <form className={styles.form}>\r\n              <label className=\"my-2\">Title: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                defaultValue={props.task.title}\r\n                onChange={getInput}\r\n              ></input>\r\n              <label className=\"my-2\">Start Date: </label>\r\n              <input\r\n                defaultValue={props.task.startDate}\r\n                name=\"startDate\"\r\n                type=\"date\"\r\n                onChange={getInput}\r\n              ></input>\r\n              <label className=\"my-2\">End Date: </label>\r\n              <input\r\n                defaultValue={props.task.endDate}\r\n                name=\"endDate\"\r\n                type=\"date\"\r\n                onChange={getInput}\r\n              ></input>\r\n            </form>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <Button name=\"Close\" event={closeButtonHandler}></Button>\r\n            <Button name={props.action} event={confirmButtonHandle}></Button>\r\n          </div>\r\n          {warning && (\r\n            <div className=\"alert alert-danger\">\r\n              <strong>Failed!</strong> {warningMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Modal task={task} action={props.action} />,\r\n        document.getElementById(\"modal\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n","import Button from \"./Button\";\r\nimport styles from \"./MessageModal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst MessageModal = (props) => {\r\n  const closeButtonHandler = () => {\r\n    props.closeHandler(false)\r\n  };\r\n\r\n  const Modal = (props) => {\r\n    return (\r\n      <div>\r\n        <div className={styles.backdrop}></div>\r\n        <div className={styles.modal}>\r\n          <div className={styles.header}>\r\n            <h2>{props.title}</h2>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <h4 className={styles.message}>{props.content}</h4>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <Button name=\"OK\" event={closeButtonHandler}></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Modal title={props.title} content={props.content} />,\r\n        document.getElementById(\"message\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MessageModal;\r\n","import Button from \"./Button\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst styles = require(\"./ConfirmationModal.module.css\");\r\n\r\nconst ConfirmationModal = (props) => {\r\n  const closeButtonHandler = () => {\r\n    props.closeHandler(false);\r\n  };\r\n\r\n  const yesButtonHandler = () => {\r\n    props.yesHandler();\r\n    props.closeHandler(false);\r\n  };\r\n  const Modal = (props) => {\r\n    return (\r\n      <div>\r\n        <div className={styles.backdrop}></div>\r\n        <div className={styles.modal}>\r\n          <div className={styles.header}>\r\n            <h2>{props.title}</h2>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <p className={styles.message}>{props.content}</p>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <Button name=\"No\" event={closeButtonHandler}></Button>\r\n            <Button name=\"Yes\" event={yesButtonHandler}></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Modal title={props.title} content={props.content} />,\r\n        document.getElementById(\"message\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport TaskCard from \"../UI/TaskCard\";\r\nimport styles from \"./ProgressItemOperation.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MessageModal from \"../UI/MessageModal\";\r\nimport ConfirmationModal from \"../UI/ConfirmationModal\";\r\n\r\nconst ProgressItemOperation = (props) => {\r\n  const [updateShow, setUpdateShow] = useState(false);\r\n  const [message, setMessage] = useState(false);\r\n  const [deleteShow, setDeleteShow] = useState(false);\r\n  const [messageData, setMessageData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const getDMY = (dateValue) => {\r\n    dateValue = new Date(dateValue);\r\n    return {\r\n      day:\r\n        dateValue.getDate() < 10\r\n          ? \"0\" + dateValue.getDate()\r\n          : dateValue.getDate(),\r\n      month:\r\n        dateValue.getMonth() + 1 < 10\r\n          ? \"0\" + (dateValue.getMonth() + 1)\r\n          : dateValue.getMonth() + 1,\r\n      year: dateValue.getFullYear(),\r\n    };\r\n  };\r\n  const dateToString = (dateValue) => {\r\n    return dateValue.year + \"-\" + dateValue.month + \"-\" + dateValue.day;\r\n  };\r\n  let startDate = getDMY(props.startDate);\r\n  let endDate = getDMY(props.endDate);\r\n\r\n  startDate = dateToString(startDate);\r\n  endDate = dateToString(endDate);\r\n  const updateEventHandler = () => {\r\n    setUpdateShow(true);\r\n  };\r\n\r\n  const deleteEventHandler = () => {\r\n    setMessageData({\r\n      title: \"Delete!\",\r\n      content:\r\n        \"Would you really like to delete the task: [ \" + props.title + \" ]?\",\r\n    });\r\n    setDeleteShow(true);\r\n  };\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchUpdatedTask = (task) => {\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/update-task\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        if (result.state) {\r\n          setMessageData({\r\n            title: \"Success!\",\r\n            content: \"You have updated the task: [ \" + props.title + \" ]\",\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n          dispatch({\r\n            type: \"taskUpdateOne\",\r\n            task: props.id,\r\n            taskNewData: result[0],\r\n          });\r\n        } else {\r\n          setMessageData({\r\n            title: \"Failed!\",\r\n            content: result.message,\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchDeleteTask = () => {\r\n    console.log(\"aaa \" + props.id);\r\n\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/delete-task\", {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ _id: props.id }),\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        if (result.state) {\r\n          setMessageData({\r\n            title: \"Success!\",\r\n            content: \"You have delete the task: [ \" + props.title + \" ]\",\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n          dispatch({\r\n            type: \"taskDeleteOne\",\r\n            task: props.id,\r\n          });\r\n        } else {\r\n          setMessageData({\r\n            title: \"Failed!\",\r\n            content: result.message,\r\n          });\r\n          setMessage(true);\r\n          setUpdateShow(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.operation}>\r\n        {deleteShow && (\r\n          <ConfirmationModal\r\n            closeHandler={setDeleteShow}\r\n            yesHandler={fetchDeleteTask}\r\n            title={messageData.title}\r\n            content={messageData.content}\r\n          ></ConfirmationModal>\r\n        )}\r\n        {message && (\r\n          <MessageModal\r\n            closeHandler={setMessage}\r\n            title={messageData.title}\r\n            content={messageData.content}\r\n          ></MessageModal>\r\n        )}\r\n        {updateShow && (\r\n          <TaskCard\r\n            id={props.id}\r\n            title={props.title}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            confirmHandle={fetchUpdatedTask}\r\n            changeModalHandler={setUpdateShow}\r\n            action=\"Update\"\r\n          ></TaskCard>\r\n        )}\r\n        <Button\r\n          name=\" Edit\"\r\n          event={updateEventHandler}\r\n          emo=\"fas fa-edit\"\r\n        ></Button>\r\n        <Button\r\n          name=\" Delete\"\r\n          event={deleteEventHandler}\r\n          emo=\"fas fa-trash-alt\"\r\n        ></Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressItemOperation;\r\n","import styles from \"./ProgressItem.module.css\";\r\nimport ProgressItemOperation from \"./ProgressItemOperation\";\r\n\r\nconst ProgressItem = (props) => {\r\n  const startDate = new Date(props.startDate);\r\n  const endDate = new Date(props.endDate);\r\n  const today = new Date(Date.now());\r\n\r\n  const dateDescription =\r\n    props.startDate.toString().slice(0, 10) +\r\n    \" To \" +\r\n    props.endDate.toString().slice(0, 10);\r\n\r\n  const differenceDaysFromBegin = Math.ceil(\r\n    (endDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24)\r\n  );\r\n\r\n  const differenceDaysFromNow = Math.ceil(\r\n    (endDate.getTime() - today.getTime()) / (1000 * 3600 * 24)\r\n  );\r\n  const progress =\r\n    Math.max(\r\n      0,\r\n      Math.min(\r\n        100,\r\n        ((differenceDaysFromBegin - differenceDaysFromNow +1) /\r\n          differenceDaysFromBegin) *\r\n          100\r\n      )\r\n    )\r\n      .toFixed(2)\r\n      .toString() + \"%\";\r\n\r\n  return (\r\n    <li className=\"container p-3 my-3\" id={props.id}>\r\n      <div className={\"card \" + styles.card}>\r\n        <div className=\"card-body bg-light\">\r\n          <div>\r\n            <h4 className=\"card-title my-3\">{props.title}</h4>\r\n          </div>\r\n          <div>\r\n            <p className=\"card-text my-3\">\r\n              <strong>{differenceDaysFromNow}</strong> days far from{\" \"}\r\n              {props.title}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <div className={\"progress  my-3\"} style={{ height: \"30px\" }}>\r\n              <div\r\n                className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                style={{ width: progress, height: \"30px\" }}\r\n              >\r\n                {progress}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-left\">\r\n            <p className=\"card-text\">{dateDescription}</p>\r\n          </div>\r\n          <div>\r\n            <ProgressItemOperation\r\n              id={props.id}\r\n              title={props.title}\r\n              startDate={props.startDate}\r\n              endDate={props.endDate}\r\n            ></ProgressItemOperation>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProgressItem;\r\n","import ProgressItem from \"./ProgressItem\";\r\nimport styles from \"./ProgressList.module.css\";\r\n\r\nconst ProgressList = (props) => {\r\n  let userProgress = props.taskList;\r\n  const data = userProgress.map((progress) => {\r\n    return (\r\n      <ProgressItem\r\n        key={progress._id}\r\n        id={progress._id}\r\n        title={progress.title}\r\n        startDate={progress.startDate}\r\n        endDate={progress.endDate}\r\n      ></ProgressItem>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.main}>\r\n      <div></div>\r\n      <ul className={\"card-deck \" + styles.cardUl}>{data}</ul>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressList;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MessageModal from \"../UI/MessageModal\";\r\nimport TaskCard from \"../UI/TaskCard\";\r\nimport styles from \"./ProgressAdd.module.css\";\r\n\r\nconst ProgressAdd = (props) => {\r\n  const [showNewTaskModal, setShowNewTaskModal] = useState(false);\r\n  const [message, setMessage] = useState(false);\r\n  const newProgressHandler = () => {\r\n    setShowNewTaskModal(true);\r\n  };\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n  const [messageData, setMessageData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const fetchNewTask = (task) => {\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/new-task\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        if (result.state) {\r\n          dispatch({\r\n            type: \"taskAddOne\",\r\n            task: result,\r\n          });\r\n          setMessageData({\r\n            title: \"Success!\",\r\n            content: \"You have created a new Task: [ \" + result.title + \" ]\",\r\n          });\r\n          setMessage(true);\r\n          setShowNewTaskModal(false);\r\n        } else {\r\n          setMessageData({\r\n            title: \"Failed!\",\r\n            content: result.message,\r\n          });\r\n          setMessage(true);\r\n          setShowNewTaskModal(false);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className={\"nav-item mx-auto\"}>\r\n      <div className={styles.actions}>\r\n        {message && (\r\n          <MessageModal\r\n            closeHandler={setMessage}\r\n            title={messageData.title}\r\n            content={messageData.content}\r\n          ></MessageModal>\r\n        )}\r\n        {showNewTaskModal && (\r\n          <TaskCard\r\n            action=\"Create\"\r\n            confirmHandle={fetchNewTask}\r\n            changeModalHandler={setShowNewTaskModal}\r\n          ></TaskCard>\r\n        )}\r\n        <a\r\n          className=\"text-white btn-lg btn btn-dark\"\r\n          onClick={newProgressHandler}\r\n        >\r\n          <i className=\"fas fa-plus-circle\"></i> New Task\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressAdd;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport ProgressAdd from \"../Progress/ProgressAdd\";\r\n\r\n\r\nconst Nav = (props) => {\r\n    const username = useSelector(state=>state.username)\r\n    const token = localStorage.getItem(\"token\");\r\n    const dispatch = useDispatch();\r\n    const logoutEventHandler =() =>{\r\n      localStorage.removeItem('token');\r\n      dispatch({\r\n        type: \"logout\",\r\n      })\r\n    }\r\n\r\n    const newTaskAdd = (task) => {\r\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/task/new-task\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          auth: token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: task.username,\r\n          title: task.title,\r\n          startDate: task.startDate,\r\n          endDate: task.endDate,\r\n        }),\r\n      })\r\n        .then((res) => (res = res.json()))\r\n        .then((result) => {\r\n          dispatch({\r\n            type: \"taskAddOne\",\r\n            task: result,\r\n          });\r\n        });\r\n    };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n      <a className=\"navbar-brand mr-auto\" href=\"/\"><i class=\"fas fa-home\"></i></a>\r\n      <ProgressAdd newTaskAdd={newTaskAdd}></ProgressAdd>\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item dropdown\">\r\n          <a\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbardrop\"\r\n            data-toggle=\"dropdown\"\r\n          >\r\n            {username}\r\n          </a>\r\n          <div className=\"dropdown-menu \">\r\n            <a className=\"dropdown-item\" onClick={logoutEventHandler} href=\"#\">\r\n              Sign out\r\n            </a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import ProgressList from \"../Progress/ProgressList\";\r\nimport styles from \"./Layout.module.css\";\r\nimport Nav from \"./Nav\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Layout = (props) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const taskList = useSelector((state) => state.taskList);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/task/get-tasks\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        auth: token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => (res = res.json()))\r\n      .then((result) => {\r\n        dispatch({\r\n          type: \"taskUpdateAll\",\r\n          taskList: result,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <Nav></Nav>\r\n      {taskList.length > 0 ? (\r\n        <ProgressList taskList={taskList}></ProgressList>\r\n      ) : (\r\n        <div className={styles.title_main}>\r\n          <p className=\"bg-secondary\">Sorry,you do not have any task!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styles from \"./Login.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const usernameHandler = (event) => {\r\n    const username = event.target.value;\r\n    setLoginError(false);\r\n    setUsername(username);\r\n  };\r\n\r\n  const passwordHandler = (event) => {\r\n    const passwd = event.target.value;\r\n    setLoginError(false);\r\n    setPassword(passwd);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loginError) {\r\n      if (user.token) {\r\n        localStorage.setItem(\"token\", user.token);\r\n        dispatch({\r\n          type: \"login\",\r\n          userIsAuth: true,\r\n          username: user.username,\r\n        });\r\n        setLoginError(true)\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  const loginHandler = (event) => {\r\n    event.preventDefault();\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/user/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      mode: \"cors\",\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error\r\n        } else {\r\n          return (res = res.json());\r\n        }\r\n      })\r\n      .then((data) => setUser(data))\r\n      .catch((err) => {\r\n        setLoginError(true);\r\n        setErrorMessage(\"username or password is incorrect!\")\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.border}>\r\n        <div className={styles.title  + \" text-white\"}>\r\n          <h1>Login</h1>\r\n        </div>\r\n        <div className={styles.title + \" text-white\"}>\r\n          <p>Welcome to Your Progress!</p>\r\n        </div>\r\n        <form onSubmit={loginHandler} className={styles.form}>\r\n          <label className={styles.control}>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            onChange={usernameHandler}\r\n            className={styles.control}\r\n          ></input>\r\n          <label className={styles.control}>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"passwd\"\r\n            id=\"passwd\"\r\n            onChange={passwordHandler}\r\n            className={styles.control}\r\n          ></input>\r\n          {loginError && (\r\n            <div className=\"alert alert-danger\">\r\n              {errorMessage}\r\n            </div>\r\n          )}\r\n          <div className={styles.actions + ' my-3'}>\r\n          <Button name=\"Sign in\" type=\"submit\"></Button>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n      <div className={styles.register + ' text-white'}>\r\n        <p>\r\n          New to Your Progress?{\" \"}\r\n          <span>\r\n            <a className=\"text-warning\" href=\"/register\">Sign on!</a>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styles from \"./Register.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  let history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameIsChanged, setUsernameIsChanged] = useState(false);\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [passwd, setPasswd] = useState();\r\n  const [passwdIsChanged, setPasswdIsChanged] = useState(false);\r\n  const [passwdError, setPasswdError] = useState(\"\");\r\n  const [confirm_passwd, setConfirm_passwd] = useState();\r\n  const [confirm_passwdIsChanged, setConfirm_passwdIsChanged] = useState(false);\r\n  const [confirm_passwdError, setConfirm_passwdError] = useState(\"\");\r\n  const [registerError, setRegisterError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    if (usernameIsChanged) {\r\n      if (username.length < 8) {\r\n        setUsernameIsChanged(false);\r\n        setUsernameError(\"Username must be at least 8 letters\");\r\n      } else {\r\n        setUsernameError(\"\");\r\n      }\r\n    }\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const passwdCheckRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[\\s\\S]{8,16}$/;\r\n    if (passwdIsChanged) {\r\n      if (!passwdCheckRegExp.test(passwd)) {\r\n        setPasswdIsChanged(false);\r\n        setPasswdError(\r\n          \"Password must include 8-16 characters, one capital letter and one number!\"\r\n        );\r\n      } else {\r\n        setPasswdError(\"\");\r\n      }\r\n    }\r\n  }, [passwd]);\r\n\r\n  useEffect(() => {\r\n    if (confirm_passwdIsChanged) {\r\n      if (confirm_passwd !== passwd) {\r\n        setConfirm_passwdIsChanged(false);\r\n        setConfirm_passwdError(\"Please confirm your password again!\");\r\n      } else {\r\n        setConfirm_passwdError(\"\");\r\n      }\r\n    }\r\n  }, [confirm_passwd]);\r\n\r\n  const usernameChangeHandler = () => {\r\n    setUsernameIsChanged(true);\r\n  };\r\n\r\n  const passwdChangeHandler = () => {\r\n    setPasswdIsChanged(true);\r\n  };\r\n\r\n  const confirm_passwordChangeHandler = () => {\r\n    setConfirm_passwdIsChanged(true);\r\n  };\r\n\r\n  const usernameInputHandler = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const passwordInputHandler = (event) => {\r\n    setPasswd(event.target.value);\r\n  };\r\n\r\n  const confirm_passwordInputHandler = (event) => {\r\n    setConfirm_passwd(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const user = { username: username, password: passwd };\r\n\r\n    fetch(process.env.REACT_APP_BACKEND_URL + \"/user/new-user\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          return res.text().then((text) => {\r\n            throw new Error(text);\r\n          });\r\n        } else {\r\n          return (res = res.json());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setRegisterError(true);\r\n        setErrorMessage(err.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.border}>\r\n        <div className={styles.title + \" text-white\"}>\r\n          <h1>Sign on</h1>\r\n        </div>\r\n        <form onSubmit={submitHandler} className={styles.form}>\r\n          <label className={styles.control}>Username:</label>\r\n          <input\r\n            className={styles.control}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onBlur={usernameInputHandler}\r\n            onChange={usernameChangeHandler}\r\n            required\r\n          ></input>\r\n          {usernameError !== \"\" ? (\r\n            <p className={styles.error}>{usernameError}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <label className={styles.control}>Password:</label>\r\n          <input\r\n            className={styles.control}\r\n            type=\"password\"\r\n            name=\"passwd\"\r\n            onBlur={passwordInputHandler}\r\n            onChange={passwdChangeHandler}\r\n            required\r\n          ></input>\r\n          {passwdError !== \"\" ? (\r\n            <p className={styles.error}>{passwdError}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <label className={styles.control}>Confirm Password:</label>\r\n          <input\r\n            className={styles.control}\r\n            type=\"password\"\r\n            name=\"confirm_passwd\"\r\n            onBlur={confirm_passwordInputHandler}\r\n            onChange={confirm_passwordChangeHandler}\r\n            required\r\n          ></input>\r\n          {confirm_passwdError !== \"\" ? (\r\n            <p className={styles.error}>{confirm_passwdError}</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"my-3 d-flex flex-row justify-content-center\">\r\n            <Button\r\n              name=\"Back\"\r\n              event={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            ></Button>\r\n            <Button name=\"Sign on\" type=\"submit\"></Button>\r\n          </div>\r\n        </form>\r\n        {registerError && (\r\n          <div className={styles.message}>\r\n            <div className=\"alert alert-danger\">\r\n              {errorMessage}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Progress from \"./components/Layout/Layout\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.userIsAuth);\n  useEffect(() => {\n    if(isAuth){\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(process.env.REACT_APP_BACKEND_URL + \"/\", {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          auth: token,\n          'Accept': 'application/json',\n        },\n      })\n        .then((res) => {\n          if (res.ok) {\n            return res= res.json();\n          } else {\n            throw res.json()\n          }\n        })\n        .then((user) => {\n          dispatch({\n            type: \"login\",\n            userIsAuth: true,\n            username: user.username,\n          });\n        }).catch((err)=>{\n          console.log(err)\n        });\n    }\n  }, [isAuth]);\n\n  return (\n    <Router>\n      <Fragment>\n        <Route exact path=\"/\">\n          {isAuth ? <Progress></Progress> : <Login></Login>}\n        </Route>\n        <Route path=\"/register\">\n          <Register></Register>\n        </Route>\n      </Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\r\nconst initState = {\r\n  userIsAuth: false,\r\n  username: \"\",\r\n  taskList: [],\r\n};\r\nconst userReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"login\":\r\n      return {\r\n        userIsAuth: action.userIsAuth,\r\n        username: action.username,\r\n        taskList: state.taskList,\r\n      };\r\n    case \"logout\":\r\n      return {\r\n        userIsAuth: action.userIsAuth,\r\n        username: action.username,\r\n        taskList: state.taskList,\r\n      };\r\n    case \"taskAddOne\":\r\n      return initState;\r\n\r\n    case \"taskUpdateAll\":\r\n      return {\r\n        userIsAuth: state.userIsAuth,\r\n        username: state.username,\r\n        taskList: action.taskList,\r\n      };\r\n    case \"taskUpdateOne\":\r\n      let newTaskListAfterUpdate = state.taskList.map((task) => {\r\n        if (task._id === action.task) {\r\n          console.log(task._id)\r\n          return action.taskNewData;\r\n        } else {\r\n          return task;\r\n        }\r\n      });\r\n      console.log(newTaskListAfterUpdate)\r\n      return {\r\n        userIsAuth: state.userIsAuth,\r\n        username: state.username,\r\n        taskList: newTaskListAfterUpdate,\r\n      };\r\n\r\n    case \"taskDeleteOne\":\r\n      console.log(\"task = \" + action.task);\r\n      let newTaskListAfterDelete = state.taskList.filter(\r\n        (task) => task._id !== action.task\r\n      );\r\n      return {\r\n        userIsAuth: state.userIsAuth,\r\n        username: state.username,\r\n        taskList: newTaskListAfterDelete,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\nconst store = createStore(userReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}